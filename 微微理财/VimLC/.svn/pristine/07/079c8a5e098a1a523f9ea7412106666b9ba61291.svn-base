//
//  CenterNewViewController.m
//  SmallCat
//
//  Created by H on 2017/5/3.
//  Copyright © 2017年 HM. All rights reserved.
//

#import "CenterNewViewController.h"
#import "LoginViewController.h"
#import "CouponViewController.h"
#import "CenterItemCell.h"

#import "TopUpViewController.h"
#import "WithdrawViewController.h"


#import "ReceiptListVC.h"
#import "MyBidViewController.h"
#import "CardViewController.h"
#import "MangerViewController.h"
#import "AddCardViewController.h"
#import "LockNameViewController.h"
#import "RealViewController.h"
#import "TradeRecordViewController.h"
#import "MSUTestCompleteController.h"

#import "UnderLineField.h"
#import "CustomUIEdgeInsetLabel.h"
#import "VimLL_common.h"

#import "MSUAccountController.h"

#import "MSUCurrentController.h"
#import "MSUTestController.h"

#import "MSUPathTools.h"
#import "MSUStringTools.h"
#import "CustomButton.h"

#import "MSUShadowInView.h"

@interface CenterNewViewController ()<UITableViewDelegate,UITableViewDataSource,UITextFieldDelegate,UIGestureRecognizerDelegate>

@property (nonatomic,strong) NSArray *DataArr;
@property (nonatomic,strong) NSArray *ImageArr;
@property (nonatomic,strong) NSArray *rightArr;

@property (nonatomic,strong) UITableView *CenterTableView;

@property (nonatomic,strong) UILabel *nameLable;
@property (nonatomic,strong) UILabel *amountLable;
@property (nonatomic,strong) UILabel *moneyLable;
@property (nonatomic,strong) UILabel *TotolLable;

@property (nonatomic,strong) NSMutableDictionary *userInfo;
@property (nonatomic , assign) NSInteger testCode;
@property (nonatomic , strong) UIButton *showHideBtn;
@property (nonatomic , strong) UIButton *questionBtn;

@property (nonatomic , strong) UIView *redCircle;
@property (nonatomic , copy) NSString *incomeStr;

@property (nonatomic , strong) MSUShadowInView *shadowView;
@property (nonatomic , strong) UIView *centerView;

@end

@implementation CenterNewViewController

#pragma mark - 加载view
- (void)viewWillAppear:(BOOL)animated{
    self.tabBarController.tabBar.hidden = NO;
    [self RequestUserInfo:NO islogin:NO];
    [self.navigationController setNavigationBarHidden:YES animated:animated];
    
    if ([[[NSUserDefaults standardUserDefaults] objectForKey:@"redCircle"] isEqualToString:@"redCircle"]) {
        self.redCircle.hidden = YES;;
    }
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self initTableview];
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self.navigationController setNavigationBarHidden:NO animated:animated];

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

#pragma mark - TableView

- (void)initTableview{
    self.DataArr= @[@"我的资产",@"米粒宝",@"投资记录",@"回款查询",@"银行卡",@"优惠劵"];
    self.ImageArr= @[@"icon_mybid",@"icon_current",@"icon_Detail",@"icon_backMoney",@"icon_Bank",@"icon_Coupon"];
    self.rightArr= @[@"已获得收益0.00元",@"已加入0元",@"",@"",@"",@""];
    
    self.CenterTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight-kTabBarHeight) style:UITableViewStyleGrouped];
    self.CenterTableView.delegate = self;
    self.CenterTableView.dataSource = self;
    [self.view addSubview:self.CenterTableView];
    self.CenterTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.CenterTableView.tableHeaderView = [self headViewCreate];
    __weak typeof(self) weakSelf = self;
    self.CenterTableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        __strong typeof(self) strongSelf = weakSelf;
        [strongSelf RequestUserInfo:YES islogin:NO];
        [strongSelf loadRequestWithAFN];
    }];
    if (iOS11) {
        _CenterTableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    } else{
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.DataArr.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    CenterItemCell * cell = [tableView dequeueReusableCellWithIdentifier:@"CenterItemCell"];
    if (!cell)
    {
        [tableView registerNib:[UINib nibWithNibName:@"CenterItemCell" bundle:nil] forCellReuseIdentifier:@"CenterItemCell"];
        cell = [tableView dequeueReusableCellWithIdentifier:@"CenterItemCell"];
    }
    
    if (indexPath.row == 0) {
        cell.TopLineview.hidden = NO;
    }else{
        cell.TopLineview.hidden = YES;
    }
    
    cell.leftTitle.text = [self.DataArr objectAtIndex:indexPath.row];
    if (indexPath.row == self.DataArr.count-1) {
        cell.BottomLineViewLeft.constant = 0;
    }else{
        cell.BottomLineViewLeft.constant = 40;
    }
    cell.leftImage.image = [UIImage imageNamed:[self.ImageArr objectAtIndex:indexPath.row]];
    
    cell.rightTltle.text = [self.rightArr objectAtIndex:indexPath.row];
    
    if (indexPath.row == 5) {
        NSString *str = [[NSUserDefaults standardUserDefaults] objectForKey:@"redCircle"];
        if (![str isEqualToString:@"redCircle"]) {
            self.redCircle.hidden = NO;
            [cell addSubview:self.redCircle];
        } else{
            self.redCircle.hidden = YES;;
        }
    }
    
    return cell;
}

- (UIView *)redCircle{
    if (!_redCircle) {
        _redCircle = [[UIView alloc] init];
        _redCircle.frame = CGRectMake(90, 15, 6, 6);
        _redCircle.clipsToBounds = YES;
        _redCircle.layer.cornerRadius = 3;
        _redCircle.layer.shouldRasterize = YES;
        _redCircle.layer.rasterizationScale = [UIScreen mainScreen].scale;
        _redCircle.backgroundColor = HEXCOLOR(0xea1d27);
    }
    return _redCircle;
}

- (UIView *)headViewCreate{
    UIView *view = [[UIView alloc] init];
    view.backgroundColor = [UIColor whiteColor];
    
    UIView *purpleView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, 230)];
    purpleView.backgroundColor = [UIColor colorWithHex:0xfb6337];
    [view addSubview:purpleView];
    
    CGFloat headerHeight;
    if (is_iPhoneX) {
        headerHeight = 40;
    } else{
        headerHeight = 30;
    }
    
    UIButton *testButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [testButton addTarget:self action:@selector(testButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    testButton.clipsToBounds = YES;
    testButton.layer.cornerRadius = 11.5;
    testButton.layer.shouldRasterize = YES;
    testButton.layer.rasterizationScale = [UIScreen mainScreen].scale;
    [testButton setTitle:@"风险测评" forState:UIControlStateNormal];
    [testButton setTitleColor:WhiteColor forState:UIControlStateNormal];
    testButton.titleLabel.font = TEXTFONT(13);
    testButton.frame = CGRectMake(14*kDeviceWidthScale, headerHeight, 72, 23);
    testButton.backgroundColor = HEXCOLOR(0xff987d);
    [view addSubview:testButton];
    
    self.nameLable = [[UILabel alloc] initWithFrame:CGRectMake(0, headerHeight,kDeviceWidth , 27)];
    self.nameLable.font = TEXTFONT(18);
    self.nameLable.text = @"--";
    self.nameLable.textAlignment = NSTextAlignmentCenter;
    self.nameLable.textColor = [UIColor whiteColor];
    [purpleView addSubview:self.nameLable];
    
    UIImageView *imaView = [[UIImageView alloc] initWithFrame:CGRectMake(kDeviceWidth-54+10,36, 20, 20)];
    imaView.image = [MSUPathTools showImageWithContentOfFileByName:@"set_icon"];
    [view addSubview:imaView];
    
    UIButton *SetButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [SetButton addTarget:self action:@selector(SetButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    SetButton.frame = CGRectMake(kDeviceWidth-54,headerHeight-2, 54, 54);
    SetButton.backgroundColor = [UIColor clearColor];
    [view addSubview:SetButton];

    self.TotolLable = [[UILabel alloc] initWithFrame:CGRectMake(0, self.nameLable.bottom+20,kDeviceWidth , 43)];
    self.TotolLable.font = TEXTFONT(36);
    self.TotolLable.text = @"--";
    self.TotolLable.textAlignment = NSTextAlignmentCenter;
    self.TotolLable.textColor = [UIColor whiteColor];
    [purpleView addSubview:self.TotolLable];
    
    UILabel *Tip1 = [[UILabel alloc] initWithFrame:CGRectMake(0, self.TotolLable.bottom, kDeviceWidth, 20)];
    Tip1.textAlignment = NSTextAlignmentCenter;
    Tip1.font = TEXTFONT(14);
    Tip1.text = @"总资产(元)";
    Tip1.textColor = [UIColor whiteColor];
    [purpleView addSubview:Tip1];
    
    self.amountLable = [[UILabel alloc] initWithFrame:CGRectMake(0, Tip1.bottom+20,kDeviceWidth/2 , 20)];
    self.amountLable.font = TEXTFONT(18);
    self.amountLable.text = @"0.00";
    self.amountLable.textAlignment = NSTextAlignmentCenter;
    self.amountLable.textColor = [UIColor colorWithHex:0xFFFFFF alpha:0.6];
    [purpleView addSubview:self.amountLable];
    
    self.showHideBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [_showHideBtn setImage:[MSUPathTools showImageWithContentOfFileByName:@"zcxs_icon"] forState:UIControlStateNormal];
    [_showHideBtn setImage:[MSUPathTools showImageWithContentOfFileByName:@"zcyc_icon"] forState:UIControlStateSelected];
    [_showHideBtn addTarget:self action:@selector(showHideBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    _showHideBtn.contentMode = UIViewContentModeScaleAspectFit;
//    [_showHideBtn setTitle:@"****" forState:UIControlStateSelected];
    [purpleView addSubview:_showHideBtn];
    
    UILabel *Tip2 = [[UILabel alloc] initWithFrame:CGRectMake(0, self.amountLable.bottom , kDeviceWidth/2, 20)];
    Tip2.font = TEXTFONT(14);
    Tip2.text = @"待收定期收益(元)";
    Tip2.textAlignment = NSTextAlignmentCenter;
    Tip2.textColor = [UIColor colorWithHex:0xFFFFFF alpha:0.6];
    [purpleView addSubview:Tip2];
    
    self.moneyLable = [[UILabel alloc] initWithFrame:CGRectMake(kDeviceWidth/2, Tip1.bottom+20,kDeviceWidth/2 , 20)];
    self.moneyLable.font = TEXTFONT(18);
    self.moneyLable.text = @"0.00";
    self.moneyLable.textAlignment = NSTextAlignmentCenter;
    self.moneyLable.textColor = [UIColor colorWithHex:0xFFFFFF alpha:0.6];
    [purpleView addSubview:self.moneyLable];
    
    UILabel *Tip3 = [[UILabel alloc] initWithFrame:CGRectMake(kDeviceWidth/2, self.moneyLable.bottom , kDeviceWidth/2, 20)];
    Tip3.font = TEXTFONT(14);
    Tip3.text = @"累计总收益(元)";
    Tip3.textAlignment = NSTextAlignmentCenter;
    Tip3.textColor = [UIColor colorWithHex:0xFFFFFF alpha:0.6];
    [purpleView addSubview:Tip3];
    
    self.questionBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [_questionBtn setImage:[MSUPathTools showImageWithContentOfFileByName:@"question"] forState:UIControlStateNormal];
    [_questionBtn addTarget:self action:@selector(questionBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    _questionBtn.contentMode = UIViewContentModeScaleAspectFit;
//    [_questionBtn setTitle:@"****" forState:UIControlStateSelected];
    [purpleView addSubview:_questionBtn];

    CustomButton *withdrawButton = [CustomButton buttonWithType:UIButtonTypeCustom];
    withdrawButton.titleLabel.font = TEXTFONT(14);
    [withdrawButton setTitleColor:[UIColor colorWithHex:0x7b7b7b] forState:UIControlStateNormal];
    withdrawButton.backgroundColor = [UIColor clearColor];
    withdrawButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
    [withdrawButton setTitle:@"充值" forState:UIControlStateNormal];
    [withdrawButton setImage:[MSUPathTools showImageWithContentOfFileByName:@"recharge"] forState:UIControlStateNormal];
    [withdrawButton addTarget:self action:@selector(RechargeButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    withdrawButton.frame = CGRectMake(0,purpleView.bottom, kDeviceWidth/3, 70);
    [view addSubview:withdrawButton];

    CustomButton *RechargeButton = [CustomButton buttonWithType:UIButtonTypeCustom];
    RechargeButton.titleLabel.font = TEXTFONT(14);
    [RechargeButton setTitleColor:[UIColor colorWithHex:0x7b7b7b] forState:UIControlStateNormal];
    RechargeButton.backgroundColor = [UIColor clearColor];
    [RechargeButton setTitle:@"提现" forState:UIControlStateNormal];
    [RechargeButton setImage:[MSUPathTools showImageWithContentOfFileByName:@"witchdrawal"] forState:UIControlStateNormal];
    [RechargeButton addTarget:self action:@selector(WithdrawButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    RechargeButton.frame = CGRectMake(kDeviceWidth/3,purpleView.bottom, kDeviceWidth/3, 70);
    [view addSubview:RechargeButton];
    
    CustomButton *detailButton = [CustomButton buttonWithType:UIButtonTypeCustom];
    detailButton.titleLabel.font = TEXTFONT(14);
    [detailButton setTitleColor:[UIColor colorWithHex:0x7b7b7b] forState:UIControlStateNormal];
    detailButton.backgroundColor = [UIColor clearColor];
    [detailButton setTitle:@"明细" forState:UIControlStateNormal];
    [detailButton setImage:[MSUPathTools showImageWithContentOfFileByName:@"detailed"] forState:UIControlStateNormal];
    [detailButton addTarget:self action:@selector(detailButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    detailButton.frame = CGRectMake(kDeviceWidth/3*2,purpleView.bottom, kDeviceWidth/3, 70);
    [view addSubview:detailButton];

    UIView *lineView1 = [[UIView alloc] init];
    lineView1.frame =CGRectMake(kDeviceWidth/3, purpleView.bottom+10, 0.5, 50);
    lineView1.backgroundColor = [UIColor colorWithHex:0xDCDCDC];
    [view addSubview:lineView1];

    UIView *lineView2 = [[UIView alloc] init];
    lineView2.frame =CGRectMake(kDeviceWidth/3*2, purpleView.bottom+10, 0.5, 50);
    lineView2.backgroundColor = [UIColor colorWithHex:0xDCDCDC];
    [view addSubview:lineView2];

    UIView *BottomlineView = [[UIView alloc] initWithFrame:CGRectMake(0, lineView1.bottom+10, kDeviceWidth, 15)];
    BottomlineView.backgroundColor = [UIColor colorWithHex:0xF0F0F0];
    [view addSubview:BottomlineView];
    view.frame = CGRectMake(0, 0, kDeviceWidth, BottomlineView.bottom);
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 50;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 0.000001;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 60;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    UIView *V= [[UIView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, 60)];
    V.backgroundColor = [UIColor colorWithHex:0xF0F0F0];
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(kDeviceWidth*0.5-55, 10.5, 110, 16);
    [btn setTitle:@"客服热线" forState:UIControlStateNormal];
    [btn setTitleEdgeInsets:UIEdgeInsetsMake(0, -10, 0, 0)];
    [btn setImage:[MSUPathTools showImageWithContentOfFileByName:@"icon"] forState:UIControlStateNormal];
    btn.imageView.contentMode = UIViewContentModeScaleAspectFit;
    [btn setTitleColor:HEXCOLOR(0x9b9b9b) forState:UIControlStateNormal];
    btn.titleLabel.font = [UIFont systemFontOfSize:14];
    btn.enabled = NO;
    [V addSubview:btn];
    
    UILabel *phoneLab = [[UILabel alloc] init];
    phoneLab.frame = CGRectMake(0, btn.bottom+2, kDeviceWidth, 20);
    phoneLab.text = @"400-0571-115";
    phoneLab.font = [UIFont systemFontOfSize:14];
    phoneLab.textAlignment = NSTextAlignmentCenter;
    phoneLab.textColor = HEXCOLOR(0x9b9b9b);
    [V addSubview:phoneLab];

    UIButton *Vbtn = [UIButton buttonWithType:UIButtonTypeCustom];
    Vbtn.frame = CGRectMake(0, 0, kDeviceWidth, 60);
    [V addSubview:Vbtn];
    [Vbtn addTarget:self action:@selector(VbtnClick:) forControlEvents:UIControlEventTouchUpInside];

    return V;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView *V= [[UIView alloc] initWithFrame:CGRectZero];
    return V;
}

#pragma mark - 请求
- (void)RequestUserInfo:(BOOL)isRefresh islogin:(BOOL)islogin{
    self.userInfo = [[NSMutableDictionary alloc] init];

    [[DataRequestServer getDataRequestServerData] request:@"LunaP2pAppAccountServlet" parameters:nil result:^(id result) {
        [self.CenterTableView.mj_header endRefreshing];
        if ([result isKindOfClass:[NSString class]] &&  [result isEqualToString:@"44"]) {
            [AddHudView addProgressView:self.view message:@"网络错误，请稍后再试"];
        }else{
            int success = [[result objectForKey:@"success"]intValue];
            if ([[result objectForKey:@"errorlog"]isEqualToString:@"noLogin"]&& success==0)
            {
                [self requestLogin];
            }
            else if([[result objectForKey:@"errorlog"]isEqualToString:@""]&& success==1)
            {
                self.userInfo=[[result objectForKey:@"items"]objectAtIndex:0];

                [CoreArchive setDictionary:self.userInfo key:@"userInfoDetial"];
                
                self.incomeStr = [NSString stringWithFormat:@"%@",[self.userInfo objectForKey:@"waitMoney"]];
                int isLockedBank=[[self.userInfo objectForKey:@"isLockedBank"]intValue];

                if (isLockedBank == 1) {
                    [CoreArchive ishasLockedBank:YES];
                }else{
                    [CoreArchive ishasLockedBank:NO];
                }
                int isHasTradePassword=[[self.userInfo objectForKey:@"isHasTradePassword"]intValue];

                if (isHasTradePassword == 1) {
                    [CoreArchive isSetTradePassWord:YES];
                }else{
                    [CoreArchive isSetTradePassWord:NO];
                }
                [self setPersonInfo];

                [self loadRequestWithAFN];
            }else
            {
                [AddHudView addProgressView:self.view message:@"数据获取失败，请重新获取"];
            }
        }
    }];
}

- (void)requestLogin{
    [[DataRequestServer getDataRequestServerData] requestLoginresult:^(NSString *LoginState) {
        if ([LoginState isEqualToString:@"true"]) {
            [self RequestUserInfo:YES islogin:YES];
        }else{
            [AddHudView addProgressView:self.view message:@"登录失效，请重新登录"];
            
            dispatch_time_t delayTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.0 * NSEC_PER_SEC));
            dispatch_after(delayTime, dispatch_get_main_queue(), ^{
                [CoreArchive removeNSUserDefaults];
                LoginViewController *loginVc= [[LoginViewController alloc] init];
                loginVc.loginType=logintypeHome;
                loginVc.hidesBottomBarWhenPushed =  YES;
                [self.navigationController pushViewController:loginVc animated:YES];
            });
        }
    }];
}

- (void)setPersonInfo{
    self.nameLable.text = [[self.userInfo objectForKey:@"username"] stringByReplacingCharactersInRange:NSMakeRange(3, 4) withString:@"****"];
    self.amountLable.text = [self.userInfo objectForKey:@"waitMoney"];
    self.TotolLable.text = [self.userInfo objectForKey:@"accountTotalAmount"];
    self.moneyLable.text = [self.userInfo objectForKey:@"interestDone"];

    CGSize sizeA = [MSUStringTools danamicGetWidthFromText:self.TotolLable.text WithFont:36];
    _showHideBtn.frame = CGRectMake(kDeviceWidth*0.5+sizeA.width*0.5+10,self.nameLable.bottom+20, 40, 40);
    
    CGSize sizeB = [MSUStringTools danamicGetWidthFromText:self.moneyLable.text WithFont:18];
    _questionBtn.frame = CGRectMake(kDeviceWidth*0.75+sizeB.width*0.5+10,self.moneyLable.top+2, 15, 15);
    
    NSString *currentFundAmount = [NSString stringWithFormat:@"%@",[self.userInfo objectForKey:@"currentFundAmount"]];
    
    self.rightArr= @[[NSString stringWithFormat:@"可用余额 %@ 元",[self.userInfo objectForKey:@"availableAmount"]],[NSString stringWithFormat:@"已加入 %.2f 元",currentFundAmount.floatValue],@"",@"",@"",@"",@""];
    [self.CenterTableView reloadData];
    [[NSUserDefaults standardUserDefaults] setObject:self.userInfo forKey:@"userInfoDetial"];
    [[NSUserDefaults standardUserDefaults] synchronize];
}

- (void)loadRequestWithAFN{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc] init];
    [dic setObject:@"" forKey:@"risktype"];
    
    [[DataRequestServer getDataRequestServerData] request:@"LunaP2pAppRiskServlet" parameters:dic result:^(id result) {
        if ([result isKindOfClass:[NSString class]] &&  [result isEqualToString:@"44"]) {
            [AddHudView addProgressView:self.view message:@"网络错误，请稍后再试"];
        }else{
            int success = [[result objectForKey:@"success"]intValue];
            if ([[result objectForKey:@"errorlog"]isEqualToString:@"noLogin"]&& success==0)
            {
                [self requestLogin];
            }else if([[result objectForKey:@"errorlog"]isEqualToString:@""]&& success==1)
            {
                self.testCode = [result[@"risktype"] integerValue];
            }else
            {
                [AddHudView addProgressView:self.view message:@"数据获取失败，请重新获取"];
            }
        }
    }];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    switch (indexPath.row) {
        case 0:
        {
            MSUAccountController *AccountVC = [[MSUAccountController alloc] init];
            AccountVC.totalAmount = [[[self.userInfo objectForKey:@"accountTotalAmount"]stringByReplacingOccurrencesOfString:@"," withString:@""] floatValue];
            AccountVC.hidesBottomBarWhenPushed =  YES;
            AccountVC.waitIncome = [self.incomeStr doubleValue];
            [self.navigationController pushViewController:AccountVC animated:YES];
        }
            break;
        case 1:{
            MSUCurrentController *CurrentVC = [[MSUCurrentController alloc] init];
            CurrentVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:CurrentVC animated:YES];
        }
            break;
        case 2:
        {
            MyBidViewController *MyBidVC = [[MyBidViewController alloc] init];
            MyBidVC.BidType = MybidTypeTypeAll;
            MyBidVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:MyBidVC animated:YES];
        }
            break;
        case 3:{
            ReceiptListVC *ReceiptVC = [[ReceiptListVC alloc] init];
            ReceiptVC.receiptType = ReceiptTypeCollect;
            ReceiptVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:ReceiptVC animated:YES];
        }
            break;
        case 4:
        {
            CardViewController *cardVC = [[CardViewController alloc] init];
            cardVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:cardVC animated:YES];
        }
            break;
        case 5:
        {
            [[NSUserDefaults standardUserDefaults] setObject:@"redCircle" forKey:@"redCircle"];
            [[NSUserDefaults standardUserDefaults] synchronize];
            
            CouponViewController *cardVC = [[CouponViewController alloc] init];
            cardVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:cardVC animated:YES];
        }
            break;
        default:
            break;
    }
}

#pragma mark - 点击事件
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    switch (indexPath.row) {
        case 0:
        {
            MyBidViewController *MyBidVC = [[MyBidViewController alloc] init];
            MyBidVC.BidType = MybidTypeTypeAll;
            MyBidVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:MyBidVC animated:YES];
        }
            break;
        case 1:
        {
//            CurrentViewController *CurrentVC = [[CurrentViewController alloc] init];
//            CurrentVC.hidesBottomBarWhenPushed =  YES;
//            [self.navigationController pushViewController:CurrentVC animated:YES];
        }
            break;
        case 2:
        {
            ReceiptListVC *ReceiptVC = [[ReceiptListVC alloc] init];
            ReceiptVC.receiptType = ReceiptTypeCollect;
            ReceiptVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:ReceiptVC animated:YES];
        }
            break;
        case 3:
        {
//            AccountViewController *AccountVC = [[AccountViewController alloc] init];
//            AccountVC.totalAmount = [[[self.userInfo objectForKey:@"accountTotalAmount"]stringByReplacingOccurrencesOfString:@"," withString:@""] floatValue];
//            AccountVC.hidesBottomBarWhenPushed =  YES;
//            [self.navigationController pushViewController:AccountVC animated:YES];
        }
            break;
        case 4:
        {
            TradeRecordViewController *tradeVC = [[TradeRecordViewController alloc] init];
            tradeVC.TrandeType = TrandeRecordTypeAll;
            tradeVC.TrandeFromType = TrandeRecordFromType_ALL;
            tradeVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:tradeVC animated:YES];
            
        }
            break;
        case 5:
        {
            CardViewController *cardVC = [[CardViewController alloc] init];
            cardVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:cardVC animated:YES];
        }
            break;
        case 6:
        {
            MangerViewController *MangerVC = [[MangerViewController alloc] init];
            MangerVC.hidesBottomBarWhenPushed =  YES;
            [self.navigationController pushViewController:MangerVC animated:YES];
        }
            break;
        default:
            break;
    }
}

- (void)WithdrawButtonClick:(UIButton *)sender{
    if (![CoreArchive isLockedBank]) {
        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"未添加银行卡，请前往添加" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
        alertView.tag=1002;
        [alertView show];
        return;
    }
    
    WithdrawViewController *WithDrawVC = [[WithdrawViewController alloc] init];
    WithDrawVC.hidesBottomBarWhenPushed =  YES;
    [self.navigationController pushViewController:WithDrawVC animated:YES];
}

- (void)RechargeButtonClick:(UIButton *)sender{
    if (![CoreArchive isLockedBank]) {
        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"未添加银行卡，请前往添加" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
        alertView.tag=1002;
        [alertView show];
        return;
    }
    TopUpViewController *TopUpVC = [[TopUpViewController alloc] init];
    TopUpVC.hidesBottomBarWhenPushed =  YES;
    [self.navigationController pushViewController:TopUpVC animated:YES];
}

- (void)detailButtonClick:(UIButton *)sender{
    TradeRecordViewController *tradeVC = [[TradeRecordViewController alloc] init];
    tradeVC.TrandeType = TrandeRecordTypeAll;
    tradeVC.TrandeFromType = TrandeRecordFromType_ALL;
    tradeVC.hidesBottomBarWhenPushed =  YES;
    [self.navigationController pushViewController:tradeVC animated:YES];
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (buttonIndex==1) {
        switch (alertView.tag) {
            case 1001:
            {
                LockNameViewController *LockName =[[LockNameViewController alloc] init];
                LockName.hidesBottomBarWhenPushed =  YES;
                [self.navigationController pushViewController:LockName animated:YES];
                break;
            }
            case 1002:
            {
                AddCardViewController *AddCardVC =[[AddCardViewController alloc] init];
                AddCardVC.hidesBottomBarWhenPushed =  YES;
                [self.navigationController pushViewController:AddCardVC animated:YES];
                break;
            }
            case 1003:
            {
                RealViewController *RealNameVC =[[RealViewController alloc] init];
                RealNameVC.hidesBottomBarWhenPushed =  YES;
                [self.navigationController pushViewController:RealNameVC animated:YES];
                break;
            }
            default:
                break;
        }
    }
}

- (void)SetButtonClick:(UIButton *)sender{
    MangerViewController *MangerVC = [[MangerViewController alloc] init];
    MangerVC.hidesBottomBarWhenPushed =  YES;
    [self.navigationController pushViewController:MangerVC animated:YES];
}

- (void)testButtonClick:(UIButton *)sender{
    if (_testCode > 0) {
        MSUTestCompleteController *com = [[MSUTestCompleteController alloc] init];
        com.codeSign = _testCode;
        com.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:com animated:YES];
    } else{
        MSUTestController *test = [[MSUTestController alloc] init];
        test.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:test animated:YES];
    }
}

- (void)showHideBtnClick:(UIButton *)sender{
    sender.selected = !sender.selected;
    if (sender.selected) {
        _TotolLable.text = @"****";
        _moneyLable.text = @"****";
        _amountLable.text = @"****";
    } else{
        self.TotolLable.text = [self.userInfo objectForKey:@"accountTotalAmount"];
        self.moneyLable.text = [self.userInfo objectForKey:@"interestDone"];
        self.amountLable.text = [self.userInfo objectForKey:@"waitMoney"];
    }
}

- (void)questionBtnClick:(UIButton *)sender{
    self.shadowView.hidden = NO;
    self.centerView.hidden = NO;
}

- (void)VbtnClick:(UIButton *)sender{
    sender.enabled = NO;
    NSMutableString* str=[[NSMutableString alloc] initWithFormat:@"tel://%@",@"400-0571-115"];
    //    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:str]];

    NSURL *url = [NSURL URLWithString:str];
    if ([[UIApplication sharedApplication] canOpenURL:url]) {
        if (iOS10) {
            [[UIApplication sharedApplication] openURL:url options:@{} completionHandler:^(BOOL success) {
                if (success) {
                    MyLog(@"hahah");
                    sender.enabled = YES;
                    
                } else{
                    sender.enabled = YES;
                }
            }];
        }else{
            [[UIApplication sharedApplication] openURL:url];
        }
    }
}

#pragma mark - 初始化
- (MSUShadowInView *)shadowView{
    if (!_shadowView) {
        self.shadowView = [[MSUShadowInView alloc] initWithFrame:CGRectMake(0, 0, kDeviceWidth, kDeviceHeight)];
        _shadowView.backgroundColor = [UIColor colorWithRed:0 green:0 blue:0 alpha:0.5];
        [MSUMainWindow addSubview:_shadowView];
        _shadowView.hidden = YES;
    }
    return _shadowView;
}

- (UIView *)centerView{
    if (!_centerView) {
        self.centerView = [[UIView alloc] initWithFrame:CGRectMake(27, (kDeviceHeight-150)*0.5, kDeviceWidth-54, 150)];
        _centerView.backgroundColor = WhiteColor;
        [self.shadowView addSubview:_centerView];
        
        UILabel *titLab = [[UILabel alloc] init];
        titLab.frame = CGRectMake(17, 17, 200, 22.5);
        titLab.text = @"累计收益说明:";
        titLab.font = [UIFont systemFontOfSize:16];
        titLab.textColor = HEXCOLOR(0x2a2a2a);
        [_centerView addSubview:titLab];
        
        UILabel *centerLab = [[UILabel alloc] init];
        centerLab.text = @"累计收益=米粒宝收益+定期每月已返利息";
        CGRect recta = [MSUStringTools danamicGetHeightFromText:centerLab.text WithWidth:kDeviceWidth-54-34 font:14];
        centerLab.frame = CGRectMake(17, titLab.bottom+8, kDeviceWidth-54-34, recta.size.height);
        centerLab.font = [UIFont systemFontOfSize:14];
        centerLab.textColor = HEXCOLOR(0x9b9b9b);
        centerLab.numberOfLines = 0;
        [_centerView addSubview:centerLab];
        
    }
    return _centerView;
}


/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
