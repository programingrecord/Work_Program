//
//  ForgotTradePassVC.m
//  WTJR
//
//  Created by H on 16/8/23.
//  Copyright © 2016年 HM. All rights reserved.
//

#import "ForgotTradePassVC.h"
#import "CustomField.h"
#import "LoginViewController.h"
@interface ForgotTradePassVC ()<UITextFieldDelegate>

@property (weak, nonatomic) IBOutlet CustomField *phonrNum;
@property (weak, nonatomic) IBOutlet CustomField *Verify;
@property (nonatomic,strong)    UIButton *Rightbutton;

@end

@implementation ForgotTradePassVC

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"重置交易密码";
    [self setUI];
}

- (void)setUI{
//    [self.phonrNum setValue:[UIColor colorWithHex:0x888888] forKeyPath:@"_placeholderLabel.textColor"];
//    [self.phonrNum setValue:TEXTFONT(13) forKeyPath:@"_placeholderLabel.font"];
    
    UIImageView *passleft = [[UIImageView alloc] init];
    passleft.image = [UIImage imageNamed:@"login_icon2"];
    passleft.frame = CGRectMake(0, 0, 40, 40);
    passleft.contentMode = UIViewContentModeCenter;
    self.phonrNum.leftViewMode = UITextFieldViewModeAlways;
    self.phonrNum.leftView = passleft;
    
//    [self.Verify setValue:[UIColor colorWithHex:0x888888] forKeyPath:@"_placeholderLabel.textColor"];
//    [self.Verify setValue:TEXTFONT(13) forKeyPath:@"_placeholderLabel.font"];
    
    
    UIImageView *Verifyleft = [[UIImageView alloc] init];
    Verifyleft.image = [UIImage imageNamed:@"login_icon3"];
    
    Verifyleft.frame = CGRectMake(0, 0, 40, 40);
    Verifyleft.contentMode = UIViewContentModeCenter;
    
    self.Verify.leftViewMode = UITextFieldViewModeAlways;
    self.Verify.leftView = Verifyleft;
    
    
    
    
    UIView *rightView=[[UIView alloc] init];
    rightView.frame = CGRectMake(0, 0, 110, 45);
    _Verify.rightView=rightView;
    _Verify.rightViewMode = UITextFieldViewModeAlways;
    
    
    
    
    self.Rightbutton = [UIButton buttonWithType:UIButtonTypeCustom];
    self.Rightbutton.frame = CGRectMake(10, 10, 100, 25);
    [self.Rightbutton setTitle:@"发送验证码" forState:UIControlStateNormal];
    self.Rightbutton.titleLabel.font = TEXTFONT(12.0);
    [self.Rightbutton setTitleColor:[UIColor colorWithHex:0xFB6337] forState:UIControlStateNormal];
    [self.Rightbutton setBackgroundColor:[UIColor clearColor]];
    [self.Rightbutton addTarget:self action:@selector(getVerifyButtonClick) forControlEvents:UIControlEventTouchUpInside];
    [rightView addSubview:self.Rightbutton];
    
    UIView *lineView = [[UIView alloc] init];
    lineView.frame = CGRectMake(10, 10,1, 25);
    lineView.backgroundColor = RGBA(229, 229, 229, 1);
    [rightView addSubview:lineView];
    
    _phonrNum.delegate = self;
    _Verify.delegate = self;
    
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(resignKeyBoard:)];
    [self.view addGestureRecognizer:tapGesture];
}
- (void)getVerifyButtonClick{
    
    [self KeyboardresignFirstResponder];
    
    
    __block int timeout=60; //倒计时时间
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
    dispatch_source_set_event_handler(_timer, ^{
        if(timeout<=0){ //倒计时结束，关闭
            dispatch_source_cancel(_timer);
            dispatch_async(dispatch_get_main_queue(), ^{
                //设置界面的按钮显示 根据自己需求设置
                [self.Rightbutton setTitle:@"发送验证码" forState:UIControlStateNormal];
                self.Rightbutton.enabled = YES;
            });
        }else{
            NSString *starTime = [NSString stringWithFormat:@"%d秒后获取",timeout];
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.Rightbutton setTitle:starTime forState:UIControlStateNormal];
                self.Rightbutton.enabled = NO;
            });
            timeout--;
        }
    });
    dispatch_resume(_timer);
    
    NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
    [params setObject:@"1" forKey:@"type"];
    [params setObject:@"vcodephone" forKey:@"hkey"];
    NSString *UrlString = [NSString stringWithFormat:@"%@luna_ajax.do", Base_url];
    
    AFHTTPSessionManager *manage = [AFHTTPSessionManager manager];
    manage.requestSerializer = [AFHTTPRequestSerializer serializer];
    manage.responseSerializer = [AFHTTPResponseSerializer serializer];
    [manage.requestSerializer setValue:@"LUNA.APP.U.AGENT" forHTTPHeaderField:@"User-Agent"];
    
    [manage GET:UrlString parameters:params progress:^(NSProgress * _Nonnull downloadProgress) {
        
    } success:^(NSURLSessionDataTask * _Nonnull task, id  _Nullable responseObject) {
        NSDictionary *result = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableContainers error:nil];
        MyLog(@"luna_ajax.do%@",result);
        
        
        if([[result objectForKey:@"success"]isEqualToString:@"true"] &&[[result objectForKey:@"errorlog"]isEqualToString:@""]){
           [AddHudView addProgressView:self.view message:@"短信验证码已发送，请注意查收"];
            
        }else if([[result objectForKey:@"errorlog"]isEqualToString:@"1"] && [[result objectForKey:@"success"]isEqualToString:@"false"]){
            [AddHudView addProgressView:self.view message:@"获取短信数量已达到单日短信发送上限"];
            return;
        }else{
            [AddHudView addProgressView:self.view message:@"获取激活码失败，您可以重新获取"];
            return;
        }

    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [AddHudView addProgressView:self.view message:@"网络错误，请稍后再试"];

    }];
    
    
}

- (IBAction)VerifyButtonClick:(id)sender {
    [self KeyboardresignFirstResponder];
    if (self.phonrNum.text.length==0) {
        [AddHudView addProgressView:self.view message:@"请输入新的交易密码"];
        return;
    }
    
    if (_Verify.text.length ==0) {
        [AddHudView addProgressView:self.view message:@"请输入验证码"];
        return;
    }
    
    NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
    [params setObject:_phonrNum.text forKey:@"password"];
    [params setObject:_Verify.text forKey:@"vcodePhone"];
    
    [[DataRequestServer getDataRequestServerData]request:@"LunaP2pAppResetTradePwdServlet" parameters:params result:^(id result) {
        if ([result isKindOfClass:[NSString class]] &&  [result isEqualToString:@"44"]) {
            [AddHudView addProgressView:self.view message:@"网络错误，请稍后再试"];
        }else{
            if ([[result objectForKey:@"success"]intValue]==0 &&[[result objectForKey:@"errorlog"]isEqualToString:@"noLogin"])
            {
                [self requestLogin];
            }else if ([[result objectForKey:@"success"]intValue]==1 &&[[result objectForKey:@"errorlog"]isEqualToString:@""])
            {
                [AddHudView addProgressView:self.view message:@"您已重置交易密码为登录密码"];
                __weak typeof(self) weakSelf = self;
                dispatch_time_t delayTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.0 * NSEC_PER_SEC));
                dispatch_after(delayTime, dispatch_get_main_queue(), ^{
                    [weakSelf popViewController];
                });
                
            }else if([[result objectForKey:@"errorlog"]isEqualToString:@"vcodePhoneFailed"]){
                [AddHudView addProgressView:self.view message:@"您输入的手机验证码有误"];
                
            }else{
                [AddHudView addProgressView:self.view message:@"重置失败,请稍后再试"];
            }
        }
    }];
}


- (void)requestLogin{
    
    [[DataRequestServer getDataRequestServerData] requestLoginresult:^(NSString *LoginState) {
        if ([LoginState isEqualToString:@"true"]) {
            
        }else{
            [AddHudView addProgressView:self.view message:@"登录失效，请重新登录"];
            double delayInSeconds = 1.0;
            __weak __block ForgotTradePassVC* BlockVC = self;
            dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));
            dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
                LoginViewController *loginVc= [[LoginViewController alloc] init];
                loginVc.loginType = logintypeOutTime;
                loginVc.hidesBottomBarWhenPushed = YES;

                [BlockVC.navigationController pushViewController:loginVc animated:YES];
            });
            
        }
    }];
}

- (void)popViewController{
    [self .navigationController popViewControllerAnimated:YES];

}


#pragma mark - 键盘

- (void)resignKeyBoard:(UITapGestureRecognizer *)tap{
    [self KeyboardresignFirstResponder];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    [self KeyboardresignFirstResponder];
    return YES;
}
- (void)KeyboardresignFirstResponder
{
    if ([_phonrNum isFirstResponder])//判断是否是第一响应
    {
        [_phonrNum resignFirstResponder];
    }
    
    if ([_Verify isFirstResponder])//判断是否是第一响应
    {
        [_Verify resignFirstResponder];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
